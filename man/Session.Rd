% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\docType{class}
\name{Session}
\alias{Session}
\title{Class `Session`.}
\format{An \code{\link{R6Class}} generator object}
\usage{
Session
}
\description{
This is the main entry point that the user (the "client")
uses to communicate with the Anchored Inversion server.
The user would create a new `Session` object by `Session$new()`,
then call the object's methods to communicate with the server.
}
\details{
This uses the OOP style of programming provided by the package
`R6`. This is an OOP system that is very different from
R's built-in `S3` and `S4` systems. It is close to the OOP
style of mainstream languages such as `Python`, `Java`, and `C++`.
This style is convenient for the object to persist connection
states as the client-server communication progresses.
}
\section{Methods}{

\describe{
    \item{\code{new(base_url)}}{%
        Create a new object of this class.
        @param base_url Base URL portion of the API server.
           The general user should ignore this.}
    \item{\code{login_demo()}}{Log into demo account.}
    \item{\code{set_project(project_id)}}{%
        Set the `project_id` of the project to work on.
        The project becomes the context of subsequent communications,
        and does not need to be specified again until changed by
        another call to this method.}
    \item{\code{clear_models()}}{%
        Clear all model iterations in this project.
        The only thing that remains is the problem definition
        and certain settings. Afterwards the user would
        restart model iterations from ground zero.}
    \item{\code{init_models(...)}}{%
        Initiate the model iteration.
        Call this method in a new project or after calling `clear_models`
        on an existing project.

        @param grid Grid definition. See `grid.R`.
        @param field_value_range An estimated range for the field values.
        @param data_forward Vector of forward data.
        @param data_linear Linear data.}
    \item{\code{update_models(...)}}{%
        Iterate the model.

        @param n_samples Number of field realizations to request and use
          for this iteration.
        @param f_forward Function of the forward process. This function
          must take one field realization and return a vector of the forward values.}
    \item{\code{summarize_project(...)}}{%
        Obtain a summary of the model iterations of the project.}
    \item{\code{simulate_fields(n)}}{%
        Request field realizations (i.e. simulations) using
        the latest iteration in the project.}
    \item{\code{logout()}}{}
}
}

\section{Properties}{

\describe{
    \item{\code{projects()}}{%
        Obtain a vector of the IDs of all the projects in the account
        that is currently logged in.}
    \item{\code{project_id()}}{%
        Obtain the `project_id` that is set in the latest call
        to `set_project`.}
}
Obtain a vector of the IDs of all the projects in the account
that is currently logged in.
Obtain the `project_id` that is set in the latest call
to `set_project`.
}

\keyword{data}
